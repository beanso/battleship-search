var search = require('../');
var test = require('tape');

var expected = [
    ['T',[ 0 ],-3.210367746201974],
    ['T',[ 5 ],-1.1725389303144338],
    ['T',[ 2.5 ],2.586482695940614],
    ['M', [ 2.5 ],2.586482695940614],
    ['T',[ 1.25 ],-0.9172953139197322],
    ['T',[ 3.75 ],2.457701773132917],
    ['T',[ 0.625 ],-2.5078655985578178],
    ['T',[ 1.875 ],1.1402438004288078],
    ['T',[ 3.125 ],3.2950351120302708],
    ['M', [ 3.125 ],3.2950351120302708],
    ['T',[ 4.375 ],1.051137369654716],
    ['T',[ 0.3125 ],-2.013390028470085],
    ['T',[ 0.9375 ],-2.790720340054251],
    ['T',[ 1.5625 ],1.1075767338974998],
    ['T',[ 2.1875 ],0.9685926649069998],
    ['T',[ 2.8125 ],4.078954538271598],
    ['M', [ 2.8125 ],4.078954538271598],
    ['T',[ 3.4375 ],2.0356107371499594],
    ['T',[ 4.0625 ],2.8292361992816173],
    ['T',[ 4.6875 ],-1.0474059319720759],
    ['T',[ 0.15625 ],-2.4460710559787806],
    ['T',[ 0.46875 ],-2.0872025767959683],
    ['T',[ 0.78125 ],-2.876643819629943],
    ['T',[ 1.09375 ],-2.081406810502803],
    ['T',[ 1.40625 ],0.287598866659619]
];

test('1-dimensional', function (t) {
    t.plan(1);
    var results = [];
    
    var q = search([ [ 0, 5 ] ], function (pt, cb) {
        var x = pt[0];
        cb(
            Math.sin(5 * x) - Math.cos(x)
            + 1/4 * Math.sin(x - 1) - 2 * Math.cos(x)
        );
    });
    
    var count = 0;
    q.on('test', function (pt, x) {
        results.push([ 'T', pt, x ]);
        if (count++ > 20) {
            t.deepEqual(expected, results);
            q.stop();
        }
    });
    
    q.on('max', function (pt, x) {
        results.push([ 'M', pt, x ]);
    });
    
    q.start();
});
